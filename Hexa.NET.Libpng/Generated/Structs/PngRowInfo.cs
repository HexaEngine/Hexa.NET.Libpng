// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.ZLib;

namespace Hexa.NET.Libpng
{
	/// <summary>
	/// This is used for the transformation routines, as some of them<br/>
	/// change these values for the row.  It also should enable using<br/>
	/// the routines for other purposes.<br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct PngRowInfo
	{
		/// <summary>
		/// width of row <br/>
		/// </summary>
		public uint Width;

		/// <summary>
		/// number of bytes in row <br/>
		/// </summary>
		public nuint Rowbytes;

		/// <summary>
		/// color type of row <br/>
		/// </summary>
		public byte ColorType;

		/// <summary>
		/// bit depth of row <br/>
		/// </summary>
		public byte BitDepth;

		/// <summary>
		/// number of channels (1, 2, 3, or 4) <br/>
		/// </summary>
		public byte Channels;

		/// <summary>
		/// bits per pixel (depth * channels) <br/>
		/// </summary>
		public byte PixelDepth;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe PngRowInfo(uint width = default, nuint rowbytes = default, byte colorType = default, byte bitDepth = default, byte channels = default, byte pixelDepth = default)
		{
			Width = width;
			Rowbytes = rowbytes;
			ColorType = colorType;
			BitDepth = bitDepth;
			Channels = channels;
			PixelDepth = pixelDepth;
		}


	}

}
