// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.ZLib;

namespace Hexa.NET.Libpng
{
	/// <summary>
	/// When the depth of the sPLT palette is 8 bits, the color and alpha samples<br/>
	/// occupy the LSB of their respective members, and the MSB of each member<br/>
	/// is zero-filled.  The frequency member always occupies the full 16 bits.<br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct PngSPLT
	{
		/// <summary>
		/// palette name <br/>
		/// </summary>
		public unsafe byte* Name;

		/// <summary>
		/// depth of palette samples <br/>
		/// </summary>
		public byte Depth;

		/// <summary>
		/// palette entries <br/>
		/// </summary>
		public unsafe PngSPLTEntry* Entries;

		/// <summary>
		/// number of palette entries <br/>
		/// </summary>
		public int Nentries;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe PngSPLT(byte* name = default, byte depth = default, PngSPLTEntry* entries = default, int nentries = default)
		{
			Name = name;
			Depth = depth;
			Entries = entries;
			Nentries = nentries;
		}


	}

}
