// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.ZLib;

namespace Hexa.NET.Libpng
{
	/// <summary>
	/// png_text holds the contents of a text/ztxt/itxt chunk in a PNG file,<br/>
	/// and whether that contents is compressed or not.  The "key" field<br/>
	/// points to a regular zero-terminated C string.  The "text" fields can be a<br/>
	/// regular C string, an empty string, or a NULL pointer.<br/>
	/// However, the structure returned by png_get_text() will always contain<br/>
	/// the "text" field as a regular zero-terminated C string (possibly<br/>
	/// empty), never a NULL pointer, so it can be safely used in printf() and<br/>
	/// other string-handling functions.  Note that the "itxt_length", "lang", and<br/>
	/// "lang_key" members of the structure only exist when the library is built<br/>
	/// with iTXt chunk support.  Prior to libpng-1.4.0 the library was built by<br/>
	/// default without iTXt support. Also note that when iTXt *is* supported,<br/>
	/// the "lang" and "lang_key" fields contain NULL pointers when the<br/>
	/// "compression" field contains * PNG_TEXT_COMPRESSION_NONE or<br/>
	/// PNG_TEXT_COMPRESSION_zTXt. Note that the "compression value" is not the<br/>
	/// same as what appears in the PNG tEXt/zTXt/iTXt chunk's "compression flag"<br/>
	/// which is always 0 or 1, or its "compression method" which is always 0.<br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct PngText
	{
		/// <summary>
		/// compression value:<br/>
		/// -1: tEXt, none<br/>
		/// 0: zTXt, deflate<br/>
		/// 1: iTXt, none<br/>
		/// 2: iTXt, deflate  <br/>
		/// </summary>
		public int Compression;

		/// <summary>
		/// keyword, 1-79 character description of "text" <br/>
		/// </summary>
		public unsafe byte* Key;

		/// <summary>
		/// comment, may be an empty string (ie "")<br/>
		/// or a NULL pointer <br/>
		/// </summary>
		public unsafe byte* Text;

		/// <summary>
		/// length of the text string <br/>
		/// </summary>
		public nuint TextLength;

		/// <summary>
		/// length of the itxt string <br/>
		/// </summary>
		public nuint ItxtLength;

		/// <summary>
		/// language code, 0-79 characters<br/>
		/// or a NULL pointer <br/>
		/// </summary>
		public unsafe byte* Lang;

		/// <summary>
		/// keyword translated UTF-8 string, 0 or more<br/>
		/// chars or a NULL pointer <br/>
		/// </summary>
		public unsafe byte* LangKey;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe PngText(int compression = default, byte* key = default, byte* text = default, nuint textLength = default, nuint itxtLength = default, byte* lang = default, byte* langKey = default)
		{
			Compression = compression;
			Key = key;
			Text = text;
			TextLength = textLength;
			ItxtLength = itxtLength;
			Lang = lang;
			LangKey = langKey;
		}


	}

}
